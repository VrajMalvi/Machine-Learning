# -*- coding: utf-8 -*-
"""Simple_linear_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1THcnDRNSOmQOJIsvOpGOERlrfw6W5brh

# Simple Linear Regression

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

df = pd.read_csv('/content/Salary_Data.csv')
x = df.iloc[:, :-1].values
y = df.iloc[:, -1].values

df.head()

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state = 0)

"""## Training the Simple Linear Regression model on the Training set"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(x_train,y_train)

"""## Predicting the Test set results"""

y_pred = regressor.predict(x_test)
y_pred

"""## Visualising the Training set results"""

plt.scatter(x_train, y_train, color = 'red')  # plot 2d scatter plot on graph
plt.plot(x_train, regressor.predict(x_train), color = 'blue') # predicted salary for x_train data
plt.title('Salary vs Experience (Training set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

"""## Visualising the Test set results"""

plt.scatter(x_test, y_pred, color = 'red')  # plot 2d scatter plot on graph
plt.plot(x_train, regressor.predict(x_train), color = 'blue') # predicted salary for x_train data
plt.title('Salary vs Experience (Test set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

"""## Model is perfectly predicting test value because the data are in linear relationship. Graph will be not as good as this one if data are in non-linear relationship."""